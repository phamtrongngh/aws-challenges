version: "2"
  
services:
  mongodb:
    image: mongo:7
    restart: always
    env_file:
      - .env
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/init.js:ro

  server:
    build:
      context: .
    command: sh -c "sleep 20 && /server" # Wait for kafka to start
    restart: always
    container_name: server
    env_file:
      - .env
    ports:
      - 8000:8000
    depends_on:
      - kafka
      - mongodb

  processor:
    build:
      context: .
    command: sh -c "sleep 20 && /processor" # Wait for kafka to start
    restart: always
    container_name: processor
    env_file:
      - .env
    depends_on:
      - kafka
      - mongodb

  kafka:
    image: "bitnami/kafka:3.5"
    container_name: kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      - KAFKA_KRAFT_CLUSTER_ID=OTMwNzFhYTY1ODNiNGE5OT
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_LOG_RETENTION_HOURS=-1
    volumes:
      - "kafka-data:/bitnami/kafka"

volumes:
  mongodata:
  kafka-data:
