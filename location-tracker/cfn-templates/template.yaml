AWSTemplateFormatVersion: "2010-09-09"
Description: "Location Tracker System"

Mappings:
  RegionMap:
    us-east-1:
      AMI: "ami-0b72821e2f351e396"

Resources:
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.0.0.0/16"
      EnableDnsHostnames: true

  Subnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC
      CidrBlock: "10.0.0.0/24"
      AvailabilityZone: !Select
        - "0"
        - !GetAZs ""

  InternetGateway:
    Type: "AWS::EC2::InternetGateway"

  AttachGateway:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  RouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC

  Route:
    Type: "AWS::EC2::Route"
    DependsOn: "AttachGateway"
    Properties:
      RouteTableId: !Ref RouteTable
      GatewayId: !Ref InternetGateway
      DestinationCidrBlock: "0.0.0.0/0"

  SubnetRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref Subnet
      RouteTableId: !Ref RouteTable

  SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Allow HTTP traffic"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: "22"
          ToPort: "22"
          CidrIp: "0.0.0.0/0"

        - IpProtocol: "tcp"
          FromPort: "8000"
          ToPort: "8000"
          CidrIp: "0.0.0.0/0"
          Description: "Allow HTTP traffic on port 8000 for the backend server"

  EC2Instance:
    Type: "AWS::EC2::Instance"
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              docker: []
              git: []
          commands:
            mount-secondary-ebs:
              command: |
                #!/bin/bash
                systemctl enable docker
                systemctl start docker
                git clone https://github.com/phamtrongngh/aws-challenges.git /home/ec2-user/aws-challenges
                cd /home/ec2-user/aws-challenges/location-tracker/location

                sudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
                sudo chmod +x /usr/local/bin/docker-compose
                
                docker-compose up -d --build
          services:
            sysvinit:
              docker:
                enabled: true
                ensureRunning: true
    Properties:
      InstanceType: "t3a.medium"
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]
      KeyName: "cloudformation"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum update -y aws-cfn-bootstrap
          /opt/aws/bin/cfn-init -s ${AWS::StackId} --resource EC2Instance --region ${AWS::Region}
          /opt/aws/bin/cfn-hup
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource EC2Instance --region ${AWS::Region}

      BlockDeviceMappings:
        - DeviceName: "/dev/xvda"
          Ebs:
            VolumeSize: "16"
            VolumeType: "gp3"
            DeleteOnTermination: "true"

      NetworkInterfaces:
        - DeviceIndex: "0"
          AssociatePublicIpAddress: "true"
          DeleteOnTermination: "true"
          SubnetId: !Ref Subnet
          GroupSet:
            - !Ref SecurityGroup

      Tags:
        - Key: "Name"
          Value: "location-tracker"

Outputs:
  InstanceId:
    Value: !Ref EC2Instance
    Description: "Instance ID"

  PublicIp:
    Value: !GetAtt EC2Instance.PublicIp
    Description: "Public IP"

  PublicDnsName:
    Value: !GetAtt EC2Instance.PublicDnsName
    Description: "Public DNS"

  VPCId:
    Value: !Ref VPC
    Description: "VPC ID"

  SubnetId:
    Value: !Ref Subnet
    Description: "Subnet ID"
